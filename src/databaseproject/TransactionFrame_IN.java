/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package databaseproject;

import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.sound.midi.SysexMessage;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class TransactionFrame_IN extends javax.swing.JFrame {

    /**
     * Creates new form TransactionFrame
     */
    public TransactionFrame_IN() {

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        initComponents();
        this.setSize(1000, 600);
        this.setLocationRelativeTo(null);
        fillcombo_SupplierName();
        show_product();
        //showSelectedProductList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jComboBox_Supplier = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton_Base = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_Product_Stock = new javax.swing.JTextField();
        jTextField_Product_Unit = new javax.swing.JTextField();
        jTextField_Product_Amount = new javax.swing.JTextField();
        jComboBox_Product_Name = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable_transaction_in = new javax.swing.JTable();
        name_kg = new javax.swing.JTextField();
        unit_kg = new javax.swing.JTextField();
        jButton_Add_item = new javax.swing.JButton();
        jButton_Done_item_list = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtext_money_Amount = new javax.swing.JTextField();
        jTextField_money_tax = new javax.swing.JTextField();
        jTextField_money_paid = new javax.swing.JTextField();
        jTextField_money_remain = new javax.swing.JTextField();
        jButton_Back_item1 = new javax.swing.JButton();
        jButton_Submit_button = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jButton_print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1000, 600));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Georgia", 3, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("    Transaction IN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(345, 345, 345))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));

        jComboBox_Supplier.setMaximumRowCount(100);
        jComboBox_Supplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name" }));
        jComboBox_Supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_SupplierActionPerformed(evt);
            }
        });

        jLabel2.setText("From :-");

        jRadioButton_Base.setText("Base");
        jRadioButton_Base.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_BaseActionPerformed(evt);
            }
        });

        jLabel3.setText("        Type :-");

        jLabel4.setText("Product Name  :");

        jLabel5.setText("Product Stock  :");

        jLabel6.setText("      Amount       :");

        jLabel7.setText("         Units          :");

        jTextField_Product_Stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Product_StockActionPerformed(evt);
            }
        });

        jTextField_Product_Unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_Product_UnitActionPerformed(evt);
            }
        });

        jComboBox_Product_Name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox_Product_NameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBox_Product_NameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jComboBox_Product_NameMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBox_Product_NameMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jComboBox_Product_NameMouseReleased(evt);
            }
        });
        jComboBox_Product_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_Product_NameActionPerformed(evt);
            }
        });

        jtable_transaction_in.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Product Quantity", "Price", "Product ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtable_transaction_in);

        jButton_Add_item.setForeground(new java.awt.Color(255, 51, 102));
        jButton_Add_item.setText("ADD");
        jButton_Add_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Add_itemActionPerformed(evt);
            }
        });

        jButton_Done_item_list.setForeground(new java.awt.Color(255, 51, 102));
        jButton_Done_item_list.setText("DONE");
        jButton_Done_item_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Done_item_listActionPerformed(evt);
            }
        });

        jLabel8.setText("Amount    :");

        jLabel9.setText(" Tax            :");

        jLabel10.setText("Balance    :");

        jLabel11.setText("Paid           :");

        jTextField_money_paid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_money_paidActionPerformed(evt);
            }
        });

        jTextField_money_remain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_money_remainActionPerformed(evt);
            }
        });

        jButton_Back_item1.setForeground(new java.awt.Color(255, 51, 102));
        jButton_Back_item1.setText("BACK");
        jButton_Back_item1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Back_item1ActionPerformed(evt);
            }
        });

        jButton_Submit_button.setText("Submit");
        jButton_Submit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Submit_buttonActionPerformed(evt);
            }
        });

        jLabel12.setText("Supplier");

        jButton_print.setText("Print");
        jButton_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton_Back_item1)
                                .addGap(42, 42, 42)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jRadioButton_Base, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                    .addComponent(jComboBox_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_Product_Stock)
                                    .addComponent(jTextField_Product_Unit)
                                    .addComponent(jTextField_Product_Amount)
                                    .addComponent(jComboBox_Product_Name, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name_kg, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(unit_kg, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton_Add_item)
                                .addGap(42, 42, 42)
                                .addComponent(jButton_Done_item_list))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_money_tax, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_money_remain, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtext_money_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_money_paid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton_print)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Submit_button)
                        .addGap(58, 58, 58))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton_Base))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_Product_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Product_Stock, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_kg, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Product_Unit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unit_kg, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Product_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_Add_item)
                            .addComponent(jButton_Done_item_list)
                            .addComponent(jButton_Back_item1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtext_money_Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_money_tax, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_money_paid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_money_remain, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(93, 93, 93)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_print)
                            .addComponent(jButton_Submit_button))))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_SupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_SupplierActionPerformed

        jRadioButton_Base.setSelected(true);

    }//GEN-LAST:event_jComboBox_SupplierActionPerformed

    private void jRadioButton_BaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_BaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_BaseActionPerformed

    private void jTextField_Product_StockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Product_StockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_Product_StockActionPerformed

    private void jComboBox_Product_NameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_Product_NameMouseClicked


    }//GEN-LAST:event_jComboBox_Product_NameMouseClicked

    private void jComboBox_Product_NameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_Product_NameMouseEntered

    }//GEN-LAST:event_jComboBox_Product_NameMouseEntered

    private void jComboBox_Product_NameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_Product_NameMouseExited

    }//GEN-LAST:event_jComboBox_Product_NameMouseExited

    private void jComboBox_Product_NameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_Product_NameMousePressed

    }//GEN-LAST:event_jComboBox_Product_NameMousePressed

    private void jComboBox_Product_NameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_Product_NameMouseReleased

    }//GEN-LAST:event_jComboBox_Product_NameMouseReleased

    /*....................Print part..................*/
    public PageFormat getPageFormat(PrinterJob pj) {

        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();

        double middleHeight = 8.0;
        double headerHeight = 2.0;
        double footerHeight = 2.0;
        double width = convert_CM_To_PPI(8);      //printer know only point per inch.default value is 72ppi
        double height = convert_CM_To_PPI(headerHeight + middleHeight + footerHeight);
        paper.setSize(width, height);
        paper.setImageableArea(
                0,
                10,
                width,
                height - convert_CM_To_PPI(1)
        );   //define boarder size    after that print area width is about 180 points

        pf.setOrientation(PageFormat.PORTRAIT);           //select orientation portrait or landscape but for this time portrait
        pf.setPaper(paper);

        return pf;
    }

    protected static double convert_CM_To_PPI(double cm) {
        return toPPI(cm * 0.393600787);
    }

    protected static double toPPI(double inch) {
        return inch * 72d;
    }

    

    public class BillPrintable implements Printable {

        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex)
                throws PrinterException {

            int result = NO_SUCH_PAGE;
            if (pageIndex == 0) {

                Graphics2D g2d = (Graphics2D) graphics;

                double width = pageFormat.getImageableWidth();

                g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

                ////////// code by alqama//////////////
                FontMetrics metrics = g2d.getFontMetrics(new Font("Arial", Font.BOLD, 7));
                //    int idLength=metrics.stringWidth("000000");
                //int idLength=metrics.stringWidth("00");
                int idLength = metrics.stringWidth("000");
                int amtLength = metrics.stringWidth("000000");
                int qtyLength = metrics.stringWidth("00000");
                int priceLength = metrics.stringWidth("000000");
                int prodLength = (int) width - idLength - amtLength - qtyLength - priceLength - 17;

                //    int idPosition=0;
                //    int productPosition=idPosition + idLength + 2;
                //    int pricePosition=productPosition + prodLength +10;
                //    int qtyPosition=pricePosition + priceLength + 2;
                //    int amtPosition=qtyPosition + qtyLength + 2;
                int productPosition = 0;
                int discountPosition = prodLength + 5;
                int pricePosition = discountPosition + idLength + 10;
                int qtyPosition = pricePosition + priceLength + 4;
                int amtPosition = qtyPosition + qtyLength;

                try {
                    /*Draw Header*/
                    int y = 10;                   /*20*/
                    int yShift = 10;
                    int headerRectHeight = 15;
                    int headerRectHeighta = 20;   /*40*/

                    /*String name = jComboBox_Supplier.getSelectedItem().toString();

                    String bill_num_payIN, o_item_name;
                    String vl1, vl2;
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=WarehouseManagementSystem;selectMethod=cursor", "sa", "123467");
                    Statement statement = connection.createStatement();

                    String query = "select bill_number_pay_in,payment_time from paymentIN";

                    PreparedStatement ps = connection.prepareStatement(query);
                    ResultSet rs;
                    rs = ps.executeQuery();

                    bill_num_payIN = rs.getString("bill_number_pay_in");

                    o_item_name = rs.getString("payment_time");*/
                    String vl1 = String.valueOf(jComboBox_Supplier.getSelectedItem());
                    //String vl2 = String.valueOf();

                    Integer amount = Integer.valueOf(jtext_money_Amount.getText());
                    Integer tax = Integer.valueOf(jTextField_money_tax.getText());
                    Integer t_amount = amount + tax;
                    Integer total = t_amount;

                    DefaultTableModel model = (DefaultTableModel) jtable_transaction_in.getModel();

                    ///////////////// Product names Get ///////////
                    /*String pn1a = pn1.getText();
                    String pn2a = pn2.getText();
                    String pn3a = pn3.getText();
                    String pn4a = pn4.getText();
                     *////////////////// Product names Get ///////////
                    ///////////////// Product price Get ///////////
                    /* int pp1a = Integer.valueOf(pp1.getText());
                    int pp2a = Integer.valueOf(pp2.getText());
                    int pp3a = Integer.valueOf(pp3.getText());
                    int pp4a = Integer.valueOf(pp4.getText());
                    int sum = pp1a + pp2a + pp3a + pp4a;*/
                    ///////////////// Product price Get ///////////
                    g2d.setFont(new Font("Monospaced", Font.PLAIN, 9));
                    g2d.drawString("----------------------------------------------------------", 12, y);
                    y += yShift;
                    g2d.drawString("          Warehouse  Bill  Receipt                        ", 12, y);
                    y += yShift;
                    g2d.drawString("-------------------------------------------------------- -", 12, y);
                    y += headerRectHeight;

                    g2d.drawString("----------------------------------------------------------", 10, y);
                    y += yShift;
                    g2d.drawString("----------------------------------------------------------", 10, y);
                    g2d.drawString("----------------------------------------------------------", 10, y);
                    y += headerRectHeight;
                   
                  
                    g2d.drawString("Product Name        Product Quantity        Item Price    ", 10, y);
                    y += yShift;
                    
                    for (int i = 0; i < model.getRowCount(); i++) 
                    {
                        String product_name = model.getValueAt(i, 0).toString();
                        String nm=String.valueOf(product_name);
                        
                        String product_quantity = model.getValueAt(i, 1).toString();
                        String pq=String.valueOf(product_quantity);
                        
                        String product_price = model.getValueAt(i, 2).toString();
                        String pc=String.valueOf(product_price);
                        
                        g2d.drawString(" " + nm + "    " + "    "+pq+"    "          + pc + "  ", 10, y);
                        y += yShift;
                    
                    }
                    
                    
                    g2d.drawString("                                            " + amount + "  ", 10, y);
                    y += yShift;
                    g2d.drawString("                                               " + tax + "  ", 10, y);
                    y += yShift;
                    g2d.drawString("                                             " + total + "  ", 10, y);
                    y += yShift;
                    g2d.drawString("------------------------------------------------------------", 10, y);
                    y += yShift;
                    g2d.drawString("------------------------------------------------------------", 10, y);
                    y += yShift;
                    g2d.drawString("************************************************************", 10, y);
                    y += yShift;
                    g2d.drawString("               Thank YOU                                    ", 10, y);
                    y += yShift;
                    g2d.drawString("************************************************************", 10, y);
                    y += yShift;

//            g2d.setFont(new Font("Monospaced",Font.BOLD,10));
//            g2d.drawString("Customer Shopping Invoice", 30,y);y+=yShift; 
                } catch (Exception r) {
                    r.printStackTrace();
                }

                result = PAGE_EXISTS;
            }
            return result;
        }
    }

    Integer num;
    boolean ck = false;
    private void jComboBox_Product_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_Product_NameActionPerformed
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=WarehouseManagementSystem;selectMethod=cursor", "sa", "123467");
            Statement statement = connection.createStatement();

            String value1 = (String) jComboBox_Product_Name.getSelectedItem();

            System.out.println(value1);

            String query = "Select product_unit,product_price from product where product_name='" + value1 + "'";

            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet rs;
            rs = ps.executeQuery();

            //ResultSet rs = statement.executeQuery(query);
            while (rs.next()) {
                //String pd_unit=rs.getString("1");
                jTextField_Product_Unit.setText("1");
                String pd_unit = rs.getString("product_unit");
                name_kg.setText(pd_unit);
                unit_kg.setText(pd_unit);

                String pd_price = rs.getString("product_price");
                jTextField_Product_Amount.setText(pd_price);

                ck = false;
            }

            String query1 = "select sum(product_quantity) as sum_product_quantity from product where product_name='" + value1 + "'";

            PreparedStatement ps1 = connection.prepareStatement(query1);
            ResultSet rs1;
            rs1 = ps1.executeQuery();

            while (rs1.next()) {

                String pd_quan = rs1.getString("sum_product_quantity");
                jTextField_Product_Stock.setText(pd_quan);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jComboBox_Product_NameActionPerformed


    private void jTextField_Product_UnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_Product_UnitActionPerformed
        String amount = String.valueOf(jTextField_Product_Amount.getText());
        Integer pro_amount = Integer.parseInt(amount);
        System.out.println(pro_amount);

        String un = String.valueOf(jTextField_Product_Unit.getText());
        Integer pro_unit = Integer.parseInt(un);

        String value_stock = String.valueOf(jTextField_Product_Stock.getText());

        Integer stock_value = Integer.parseInt(value_stock);
        stock_value = stock_value + pro_unit;

        String stock_val = String.valueOf(stock_value);

        jTextField_Product_Stock.setText(stock_val);

        System.out.println(pro_unit);

        if (ck == false) {
            num = pro_amount;
            ck = true;
        }
        //num=pro_amount;
        pro_amount = num * pro_unit;
        String val = String.valueOf(pro_amount);
        jTextField_Product_Amount.setText(val);
    }//GEN-LAST:event_jTextField_Product_UnitActionPerformed

    boolean check_price = false;
    Integer tmp_value = 0;
    private void jButton_Add_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Add_itemActionPerformed
        /**
         * code **
         */
        showSelectedProductList();

        String z = jTextField_Product_Amount.getText().toString();
        Integer z_value = Integer.parseInt(z);
        if (check_price == false) {
            tmp_value = z_value;
            check_price = true;
        } else {
            tmp_value += z_value;
        }
        String z_put = String.valueOf(tmp_value);
        jtext_money_Amount.setText(z_put);

        jTextField_Product_Amount.setText(" ");

        //jComboBox_Product_Name.removeItem(jComboBox_Product_Name.getSelectedItem());
        jTextField_Product_Unit.setText(" ");
        jTextField_Product_Stock.setText(" ");

        name_kg.setText(" ");

        unit_kg.setText(" ");


    }//GEN-LAST:event_jButton_Add_itemActionPerformed

    /*..............here.............*/
    private void jButton_Done_item_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Done_item_listActionPerformed

        jComboBox_Product_Name.removeItem(jComboBox_Product_Name.getSelectedItem());
        jTextField_Product_Amount.setText(" ");
        jTextField_Product_Amount.setEditable(false);
        //jComboBox_Product_Name.removeItem(jComboBox_Product_Name.getSelectedItem());
        jTextField_Product_Unit.setEditable(false);
        jTextField_Product_Unit.setText(" ");
        jTextField_Product_Stock.setText(" ");
        jTextField_Product_Stock.setEditable(false);
        name_kg.setText(" ");
        name_kg.setEditable(false);
        unit_kg.setText(" ");
        unit_kg.setEditable(false);

        jTextField_money_remain.setText(jtext_money_Amount.getText());

    }//GEN-LAST:event_jButton_Done_item_listActionPerformed

    private void jButton_Back_item1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Back_item1ActionPerformed
        Menu_Frame mf = new Menu_Frame();
        mf.setVisible(true);
    }//GEN-LAST:event_jButton_Back_item1ActionPerformed


    private void jTextField_money_remainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_money_remainActionPerformed

    }//GEN-LAST:event_jTextField_money_remainActionPerformed

    /*................Here.................*/
    private void jTextField_money_paidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_money_paidActionPerformed
        String money = String.valueOf(jtext_money_Amount.getText());
        String tax = String.valueOf(jTextField_money_tax.getText());
        String paid = String.valueOf(jTextField_money_paid.getText());
        Integer money_int = Integer.parseInt(money);
        Integer tax_int = Integer.parseInt(tax);
        Integer paid_int = Integer.parseInt(paid);
        Integer rem_balance = (money_int + tax_int) - paid_int;
        String balance_rem = String.valueOf(rem_balance);
        jTextField_money_remain.setText(balance_rem);
    }//GEN-LAST:event_jTextField_money_paidActionPerformed

    private void jButton_Submit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Submit_buttonActionPerformed

        String id_value1;

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=WarehouseManagementSystem;selectMethod=cursor", "sa", "123467");
            Statement statement = connection.createStatement();

            String ve = String.valueOf(jComboBox_Supplier.getSelectedItem());
            //String query = "insert into paymentIN(payment_total,payment_paid,payment_remain,payment_time)values(?,?,?,?)";
            String query = "insert into paymentIN(payment_total,payment_paid,payment_remain,payment_time,supplier_id)"
                    + "values(?,?,?,?,(select supplier_id from supplier where name='" + ve + "'" + "))";
            PreparedStatement pst = connection.prepareStatement(query);

            LocalDateTime myDateObj = LocalDateTime.now();
            DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");

            String formattedDate = myDateObj.format(myFormatObj);

            pst.setString(1, jtext_money_Amount.getText());
            pst.setString(2, jTextField_money_paid.getText());
            pst.setString(3, jTextField_money_remain.getText());
            pst.setString(4, formattedDate);

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Inserted Succesfully...");

        } catch (Exception e) {
            e.printStackTrace();
        }

        /*..............here..............*/
        jtext_money_Amount.setText("");
        jtext_money_Amount.setEditable(false);

        jTextField_money_paid.setText("");
        jTextField_money_paid.setEditable(false);

        jTextField_money_remain.setText("");
        jTextField_money_remain.setEditable(false);

        jTextField_money_tax.setText("");
        jTextField_money_tax.setEditable(false);

        DefaultTableModel model = (DefaultTableModel) jtable_transaction_in.getModel();

        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Table is empty");
        } else {
            String product_name, product_quantity, product_price;
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=WarehouseManagementSystem;selectMethod=cursor", "sa", "123467");
                //Statement statement = connection.createStatement();

                for (int i = 0; i < model.getRowCount(); i++) {
                    product_name = model.getValueAt(i, 0).toString();
                    product_quantity = model.getValueAt(i, 1).toString();
                    product_price = model.getValueAt(i, 2).toString();

                    String query = "insert into order_details(order_item_name,order_item_quantity,order_item_amount) values(?,?,?)";

                    PreparedStatement ps = connection.prepareStatement(query);

                    ps.setString(1, product_name);
                    ps.setString(2, product_quantity);
                    ps.setString(3, product_price);

                    ps.execute();
                }

                JOptionPane.showMessageDialog(null, "Data inserted successfully");

                model.setRowCount(0);

            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton_Submit_buttonActionPerformed

    private void jButton_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_printActionPerformed

        PrinterJob print_j = PrinterJob.getPrinterJob();
        print_j.setPrintable(new BillPrintable(), getPageFormat(print_j));

        try {
            print_j.print();
        } catch (PrinterException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton_printActionPerformed

    public void showSelectedProductList() {
        //ArrayList<Product> pdlist=productlist();
        DefaultTableModel model = (DefaultTableModel) jtable_transaction_in.getModel();
        Object[] row = new Object[5];

        row[0] = jComboBox_Product_Name.getSelectedItem();
        row[1] = jTextField_Product_Unit.getText();
        row[2] = jTextField_Product_Amount.getText();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=WarehouseManagementSystem;selectMethod=cursor", "sa", "123467");
            Statement statement = connection.createStatement();

            String value1 = jComboBox_Product_Name.getSelectedItem().toString();
            String query = "Select product_id from product where product_name='" + value1 + "'";

            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet rs;
            rs = ps.executeQuery();

            if (rs.next()) {
                String value = rs.getString("product_id");
                row[3] = value;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        /* .............. here.................*/
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=WarehouseManagementSystem;selectMethod=cursor", "sa", "123467");
            Statement statement = connection.createStatement();

            String value1 = jComboBox_Product_Name.getSelectedItem().toString();
            String query = "Select product_quantity from product where product_name='" + value1 + "'";

            PreparedStatement ps1 = connection.prepareStatement(query);
            ResultSet rs1;
            rs1 = ps1.executeQuery();

            if (rs1.next()) {

                String pd_quan = rs1.getString("product_quantity");
                Integer x = Integer.parseInt(pd_quan);

                String un = String.valueOf(jTextField_Product_Unit.getText());
                Integer pro_unit = Integer.parseInt(un);

                x = x + pro_unit;

                String y = String.valueOf(x);

                String query1 = "update product set product_quantity='" + y + "'" + "where product_name='" + value1 + "'";
                ps1 = connection.prepareStatement(query1);
                ps1.execute();
                JOptionPane.showMessageDialog(null, "Updated success");

                //jTextField_Product_Stock.setText(pd_quan);
                //name_kg.setText("Kg");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        model.addRow(row);

    }

    private void fillcombo_SupplierName() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=WarehouseManagementSystem;selectMethod=cursor", "sa", "123467");
            Statement statement = connection.createStatement();
            String query = "Select name from supplier";
            PreparedStatement ps = connection.prepareStatement(query);
            ResultSet res;
            res = ps.executeQuery();

            while (res.next()) {
                String name = res.getString("name");
                jComboBox_Supplier.addItem(name);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void show_product() {

        PreparedStatement ps;
        ResultSet res;
        //if (jRadioButton_Base.isSelected()) {
        boolean ck = false;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=WarehouseManagementSystem;selectMethod=cursor", "sa", "123467");
            Statement statement = connection.createStatement();
            String query = "Select product_name from product";

            ps = connection.prepareStatement(query);
            res = ps.executeQuery();
            jComboBox_Product_Name.addItem(" ");
            while (res.next()) {
                String pro_name = res.getString("product_name");
                jComboBox_Product_Name.addItem(pro_name);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionFrame_IN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionFrame_IN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionFrame_IN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionFrame_IN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransactionFrame_IN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton_Add_item;
    private javax.swing.JButton jButton_Back_item1;
    private javax.swing.JButton jButton_Done_item_list;
    private javax.swing.JButton jButton_Submit_button;
    private javax.swing.JButton jButton_print;
    private javax.swing.JComboBox<String> jComboBox_Product_Name;
    private javax.swing.JComboBox<String> jComboBox_Supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton_Base;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField_Product_Amount;
    private javax.swing.JTextField jTextField_Product_Stock;
    private javax.swing.JTextField jTextField_Product_Unit;
    private javax.swing.JTextField jTextField_money_paid;
    private javax.swing.JTextField jTextField_money_remain;
    private javax.swing.JTextField jTextField_money_tax;
    private javax.swing.JTable jtable_transaction_in;
    private javax.swing.JTextField jtext_money_Amount;
    private javax.swing.JTextField name_kg;
    private javax.swing.JTextField unit_kg;
    // End of variables declaration//GEN-END:variables
}
